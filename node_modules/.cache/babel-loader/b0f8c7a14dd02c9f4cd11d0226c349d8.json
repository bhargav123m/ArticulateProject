{"ast":null,"code":"var _jsxFileName = \"/Users/ivcmbp069adm/Desktop/challenge/src/components/ReviewItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport toMaterialStyle from 'material-color-hash';\nimport 'whatwg-fetch';\nimport './ReviewItems.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchItemsForUser = async userId => {\n  const response = await fetch(`/api/items?userId=${userId}`);\n\n  if (response.status !== 200) {\n    const text = await response.text();\n    throw new Error(text);\n  }\n\n  return await response.json();\n};\n\nconst ReviewItems = ({\n  currentUser\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetchItems();\n  }, [currentUser.id]);\n\n  const fetchItems = async () => {\n    setLoading(true);\n\n    try {\n      const fetchedItems = await fetchItemsForUser(currentUser.id);\n      setLoading(false);\n      setItems(fetchedItems);\n    } catch (err) {\n      setLoading(false);\n      setItems([]);\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-items\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Review items for \", currentUser.name, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid--columns-3\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-items__loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }, this), !loading && items.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/items/${item.id}`,\n        className: \"grid__item\",\n        style: toMaterialStyle(item.id, 100),\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReviewItems, \"X4x04bf2XOIdWC9JIzBW7u2/seA=\");\n\n_c = ReviewItems;\nexport default ReviewItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewItems\");","map":{"version":3,"sources":["/Users/ivcmbp069adm/Desktop/challenge/src/components/ReviewItems.js"],"names":["React","useEffect","useState","Link","toMaterialStyle","fetchItemsForUser","userId","response","fetch","status","text","Error","json","ReviewItems","currentUser","loading","setLoading","items","setItems","fetchItems","id","fetchedItems","err","console","error","name","map","item","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAO,cAAP;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,iBAAiB,GAAG,MAAMC,MAAN,IAAgB;AACxC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qBAAoBF,MAAO,EAA7B,CAA5B;;AAEA,MAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAM,IAAIC,KAAJ,CAAUD,IAAV,CAAN;AACD;;AAED,SAAO,MAAMH,QAAQ,CAACK,IAAT,EAAb;AACD,CATD;;AAWA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAEkB,IAAAA,UAAU;AAAI,GAAvB,EAAyB,CAACL,WAAW,CAACM,EAAb,CAAzB,CAAT;;AAEA,QAAMD,UAAU,GAAG,YAAY;AAC7BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMK,YAAY,GAAG,MAAMhB,iBAAiB,CAACS,WAAW,CAACM,EAAb,CAA5C;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACG,YAAD,CAAR;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAK,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA,sCAAsBR,WAAW,CAACW,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBACIV,OAAO,iBAAI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADf,EAEI,CAACA,OAAD,IAAYE,KAAK,CAACS,GAAN,CAAUC,IAAI,iBAC1B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASA,IAAI,CAACP,EAAG,EAA5B;AAA6C,QAAA,SAAS,EAAC,YAAvD;AAAoE,QAAA,KAAK,EAAEhB,eAAe,CAACuB,IAAI,CAACP,EAAN,EAAU,GAAV,CAA1F;AAAA,kBACIO,IAAI,CAACC;AADT,SAAoCD,IAAI,CAACP,EAAzC;AAAA;AAAA;AAAA;AAAA,cADY,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMP,W;;KAAAA,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport toMaterialStyle from 'material-color-hash'\nimport 'whatwg-fetch'\n\nimport './ReviewItems.css'\n\nconst fetchItemsForUser = async userId => {\n  const response = await fetch(`/api/items?userId=${userId}`)\n\n  if (response.status !== 200) {\n    const text = await response.text()\n    throw new Error(text)\n  } \n\n  return await response.json()\n}\n\nconst ReviewItems = ({currentUser}) => {\n  const [loading, setLoading] = useState(true)\n  const [items, setItems] = useState([])\n\n  useEffect(() => { fetchItems() }, [currentUser.id])\n\n  const fetchItems = async () => {\n    setLoading(true)\n\n    try {\n      const fetchedItems = await fetchItemsForUser(currentUser.id)\n      setLoading(false)\n      setItems(fetchedItems)\n    } catch (err) { \n      setLoading(false)\n      setItems([])\n      console.error(err)\n    }\n  }\n\n  return (\n    <div className=\"review-items\">\n      <h3>Review items for {currentUser.name}:</h3>\n      <div className=\"grid grid--columns-3\">\n        { loading && <div className=\"review-items__loading\">Loading...</div>}\n        { !loading && items.map(item =>\n          <Link to={`/items/${item.id}`} key={item.id} className=\"grid__item\" style={toMaterialStyle(item.id, 100)}>\n            { item.title }\n          </Link>\n        ) }\n      </div>\n    </div>\n  )\n}\n\nexport default ReviewItems\n"]},"metadata":{},"sourceType":"module"}