{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stringHash = require('string-hash');\n\nvar _stringHash2 = _interopRequireDefault(_stringHash);\n\nvar _materialColors = require('./materialColors');\n\nvar _materialColors2 = _interopRequireDefault(_materialColors);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar availableShades = ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\nvar materialWhite = 'rgba(255, 255, 255, 1)';\nvar materialBlack = 'rgba(0, 0, 0, 0.87)';\n/* Get the whole color object, including all the shades, name and white breakpoint */\n\nfunction getColorObj(text) {\n  var hashedText = (0, _stringHash2.default)(text);\n  var colorIndex = hashedText % _materialColors2.default.length;\n  return _materialColors2.default[colorIndex];\n}\n/* Get a ready-to-use Style object of the Material color of a string */\n\n\nfunction toMaterialStyle(text) {\n  var shade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  var shadeStr = '' + shade; // convert shade to string\n\n  if (!availableShades.includes(shadeStr)) {\n    shadeStr = '500';\n  }\n\n  var colorObj = getColorObj(text);\n  return {\n    backgroundColor: colorObj.shades[shadeStr],\n    color: parseInt(shadeStr, 10) >= colorObj.whiteBreakpoint ? materialWhite : materialBlack,\n    materialColorName: colorObj.name\n  };\n}\n\nexports.default = toMaterialStyle;","map":{"version":3,"sources":["/Users/ivcmbp069adm/Desktop/challenge/node_modules/material-color-hash/lib/index.js"],"names":["Object","defineProperty","exports","value","_stringHash","require","_stringHash2","_interopRequireDefault","_materialColors","_materialColors2","obj","__esModule","default","availableShades","materialWhite","materialBlack","getColorObj","text","hashedText","colorIndex","length","toMaterialStyle","shade","arguments","undefined","shadeStr","includes","colorObj","backgroundColor","shades","color","parseInt","whiteBreakpoint","materialColorName","name"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACH,WAAD,CAAzC;;AAEA,IAAII,eAAe,GAAGH,OAAO,CAAC,kBAAD,CAA7B;;AAEA,IAAII,gBAAgB,GAAGF,sBAAsB,CAACC,eAAD,CAA7C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,eAAe,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,KAAnC,EAA0C,KAA1C,EAAiD,KAAjD,EAAwD,KAAxD,EAA+D,KAA/D,CAAtB;AACA,IAAIC,aAAa,GAAG,wBAApB;AACA,IAAIC,aAAa,GAAG,qBAApB;AAEA;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,UAAU,GAAG,CAAC,GAAGZ,YAAY,CAACM,OAAjB,EAA0BK,IAA1B,CAAjB;AACA,MAAIE,UAAU,GAAGD,UAAU,GAAGT,gBAAgB,CAACG,OAAjB,CAAyBQ,MAAvD;AAEA,SAAOX,gBAAgB,CAACG,OAAjB,CAAyBO,UAAzB,CAAP;AACD;AAED;;;AACA,SAASE,eAAT,CAAyBJ,IAAzB,EAA+B;AAC7B,MAAIK,KAAK,GAAGC,SAAS,CAACH,MAAV,GAAmB,CAAnB,IAAwBG,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,GAAhF;AAEA,MAAIE,QAAQ,GAAG,KAAKH,KAApB,CAH6B,CAGF;;AAC3B,MAAI,CAACT,eAAe,CAACa,QAAhB,CAAyBD,QAAzB,CAAL,EAAyC;AACvCA,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,MAAIE,QAAQ,GAAGX,WAAW,CAACC,IAAD,CAA1B;AAEA,SAAO;AACLW,IAAAA,eAAe,EAAED,QAAQ,CAACE,MAAT,CAAgBJ,QAAhB,CADZ;AAELK,IAAAA,KAAK,EAAEC,QAAQ,CAACN,QAAD,EAAW,EAAX,CAAR,IAA0BE,QAAQ,CAACK,eAAnC,GAAqDlB,aAArD,GAAqEC,aAFvE;AAGLkB,IAAAA,iBAAiB,EAAEN,QAAQ,CAACO;AAHvB,GAAP;AAKD;;AAEDhC,OAAO,CAACU,OAAR,GAAkBS,eAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stringHash = require('string-hash');\n\nvar _stringHash2 = _interopRequireDefault(_stringHash);\n\nvar _materialColors = require('./materialColors');\n\nvar _materialColors2 = _interopRequireDefault(_materialColors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar availableShades = ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\nvar materialWhite = 'rgba(255, 255, 255, 1)';\nvar materialBlack = 'rgba(0, 0, 0, 0.87)';\n\n/* Get the whole color object, including all the shades, name and white breakpoint */\nfunction getColorObj(text) {\n  var hashedText = (0, _stringHash2.default)(text);\n  var colorIndex = hashedText % _materialColors2.default.length;\n\n  return _materialColors2.default[colorIndex];\n}\n\n/* Get a ready-to-use Style object of the Material color of a string */\nfunction toMaterialStyle(text) {\n  var shade = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n\n  var shadeStr = '' + shade; // convert shade to string\n  if (!availableShades.includes(shadeStr)) {\n    shadeStr = '500';\n  }\n\n  var colorObj = getColorObj(text);\n\n  return {\n    backgroundColor: colorObj.shades[shadeStr],\n    color: parseInt(shadeStr, 10) >= colorObj.whiteBreakpoint ? materialWhite : materialBlack,\n    materialColorName: colorObj.name\n  };\n}\n\nexports.default = toMaterialStyle;"]},"metadata":{},"sourceType":"script"}